<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="no"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch.xsd">

	<context:annotation-config />

	<bean id="reader" scope="job"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="select * from user where createDate between ? and ?" />
		<property name="rowMapper">
			<bean
				class="org.springframework.jdbc.core.BeanPropertyRowMapper"
				p:mappedClass="org.ironrhino.security.model.User" />
		</property>
		<property name="preparedStatementSetter">
			<bean
				class="org.springframework.jdbc.core.ArgumentPreparedStatementSetter">
				<constructor-arg>
					<array>
						<value>#{T(org.ironrhino.core.util.DateUtils).beginOfDay(jobParameters[workdate])}</value>
						<value>#{T(org.ironrhino.core.util.DateUtils).endOfDay(jobParameters[workdate])}</value>
					</array>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<bean id="writer" scope="job"
		class="org.springframework.batch.item.file.FlatFileItemWriter"
		p:resource="file:${app.home}/target/output.txt.#{T(org.ironrhino.core.util.DateUtils).formatDate10(jobParameters[workdate])}">
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="username,name,phone" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="headerCallback">
			<bean
				class="org.ironrhino.batch.item.file.FieldNamesHeaderCallback">
				<property name="names" value="Username,Name,Phone" />
			</bean>
		</property>
		<property name="footerCallback" ref="summaryFooterCallback" />
	</bean>

	<bean id="summaryFooterCallback" scope="step"
		class="org.ironrhino.batch.item.file.SummaryFooterCallback" />

	<bean id="jobParametersValidator"
		class="org.ironrhino.batch.job.SimpleJobParametersValidator">
		<property name="requiredKeys">
			<map>
				<entry key="workdate" value="DATE" />
			</map>
		</property>
	</bean>

	<bean id="moveLastLinesToFirstTask" scope="job"
		class="org.ironrhino.batch.tasklet.file.MoveLastLinesToFirstTask">
		<property name="file"
			value="${app.home}/target/output.txt.#{T(org.ironrhino.core.util.DateUtils).formatDate10(jobParameters[workdate])}" />
		<property name="lines" value="1" />
	</bean>

	<bean id="notifyTask" scope="job"
		class="org.ironrhino.batch.tasklet.http.WebhookTask">
		<property name="url"
			value="https://oapi.dingtalk.com/robot/send?access_token=${dingtalk.accessToken:}" />
		<property name="body">
			<value><![CDATA[{"msgtype":"text","text":{"content":"#{jobName} is finished with workdate: #{T(org.ironrhino.core.util.DateUtils).formatDate10(jobParameters[workdate])}"}}]]></value>
		</property>
		<property name="responseFailurePattern" value="errmsg" />
		<property name="suppressFailure" value="true" />
	</bean>

	<job id="exportUserJob"
		xmlns="http://www.springframework.org/schema/batch">
		<validator ref="jobParametersValidator" />
		<step id="exportToFile" next="moveLastLinesToFirst">
			<tasklet>
				<chunk reader="reader" writer="writer"
					commit-interval="${batch.exportUser.commitInterval:2}" />
			</tasklet>
			<listeners>
				<listener ref="summaryFooterCallback" />
			</listeners>
		</step>
		<step id="moveLastLinesToFirst" next="notify">
			<tasklet ref="moveLastLinesToFirstTask" />
		</step>
		<step id="notify">
			<tasklet ref="notifyTask" />
		</step>
	</job>

</beans>
